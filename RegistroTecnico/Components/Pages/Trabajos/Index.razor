@page "/Trabajos/Index"
@inject TrabajosService trabajoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Listado de Trabajos</PageTitle>

<div class="container">
    <div class="shadow-lg">
        <style>
            .titulo-fondo-azul-borde-negro {
                background-color: #add8e6;
                border: 2px solid black;
                border-radius: 5px;
                display: flex;
                align-items: center;
                justify-content: center;
            }

                .titulo-fondo-azul-borde-negro img {
                    margin-right: 10px;
                    width: 40px;
                    height: 40px;
                }

            .btn img {
                width: 24px;
                height: 24px;
            }
        </style>

        <div class="card-header text-center titulo-fondo-azul-borde-negro">
            <h3><strong>Listado de Trabajos</strong></h3>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>

                <div class="col-4">
                    <label class="col-form-label"><strong>B&uacute;squeda</strong></label>
                </div>
            </div>

            <div class="row align-items-center">
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opci&oacute;n</option>
                        <option value="Id">ID de Trabajo</option>
                        <option value="Cliente">Cliente</option>
                        <option value="Tecnico">T&eacute;cnico</option>
                    </InputSelect>
                </div>

                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary" @onclick="Buscar">
                            <img src="/images/search-icon.png" alt="Buscar" style="width: 24px; height: 24px;" />
                        </button>
                    </div>
                </div>
            </div>

            <div class="col-3">
                <button type="button" class="btn btn-primary" @onclick="PantallaCrear"> Crear</button>
            </div>

            <table class="table table-bordered text-center mt-4">
                <thead>
                    <tr>
                        <th>ID de Trabajo</th>
                        <th>ID de Cliente</th>
                        <th>Nombre del Cliente</th>
                        <th>ID de T&eacute;cnico</th>
                        <th>Nombre del T&eacute;cnico</th>
                        <th>Fecha</th>
                        <th>Descripci&oacute;n</th>
                        <th>Monto</th>
                        <th>Detalles</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var trabajo in ListaTrabajos)
                    {
                        <tr>
                            <td>@trabajo.TrabajoId</td>
                            <td>@trabajo.ClienteId</td>
                            <td>@trabajo.Clientes?.Nombres</td> <!-- Nombre del cliente -->
                            <td>@trabajo.TecnicoId</td>
                            <td>@trabajo.Tecnicos?.Nombres</td> <!-- Nombre del técnico -->
                            <td>@trabajo.Fecha.ToShortDateString()</td>
                            <td>@trabajo.Descripcion</td>
                            <td>@trabajo.Monto.ToString("C")</td> <!-- Formato de moneda -->
                            <td>
                                <button type="button" class="btn btn-outline-primary" @onclick="() => PantallaObservar(trabajo.TrabajoId)">
                                    <img src="/images/details-icon.png" alt="Detalles" />
                                </button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-outline-warning" @onclick="() => PantallaEditar(trabajo.TrabajoId)">
                                    <img src="/images/edit-icon.png" alt="Editar" />
                                </button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-outline-danger" @onclick="() => PantallaEliminar(trabajo.TrabajoId)">
                                    <img src="/images/delete-icon.png" alt="Eliminar" />
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer">
            <p><strong>Total de Trabajos: </strong>@ListaTrabajos.Count</p>
        </div>
    </div>
</div>

@code {
    public List<Trabajos> ListaTrabajos { get; set; } = new List<Trabajos>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaTrabajos = await trabajoService.Listar(e => e.TrabajoId > 0);
    }

    public void PantallaCrear() => navigationManager.NavigateTo("/Trabajos/Create");

    public void PantallaObservar(int id)
    {
        navigationManager.NavigateTo($"/Trabajos/Details/{id}");
    }

    public void PantallaEditar(int id)
    {
        navigationManager.NavigateTo($"/Trabajos/Edit/{id}");
    }

    public void PantallaEliminar(int id)
    {
        navigationManager.NavigateTo($"/Trabajos/Delete/{id}");
    }

    private async Task Buscar()
    {
        if (ValorFiltro.Trim() != "")
        {
            if (Filtro == "Id" && int.TryParse(ValorFiltro, out int trabajoId))
                ListaTrabajos = await trabajoService.Listar(e => e.TrabajoId == trabajoId);
            else if (Filtro == "Cliente")
                ListaTrabajos = await trabajoService.Listar(e => e.Clientes.Nombres.ToLower().Contains(ValorFiltro.ToLower()));
            else if (Filtro == "Tecnico")
                ListaTrabajos = await trabajoService.Listar(e => e.Tecnicos.Nombres.ToLower().Contains(ValorFiltro.ToLower()));
        }
        else
        {
            ListaTrabajos = await trabajoService.Listar(e => e.TrabajoId > 0);
        }
    }

    private async Task Restablecer()
    {
        ListaTrabajos = await trabajoService.Listar(e => e.TrabajoId > 0);
        Filtro = string.Empty;
        ValorFiltro = string.Empty;
    }
}
